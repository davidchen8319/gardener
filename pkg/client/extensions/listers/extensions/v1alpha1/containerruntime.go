/*
SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gardener/gardener/pkg/apis/extensions/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ContainerRuntimeLister helps list ContainerRuntimes.
type ContainerRuntimeLister interface {
	// List lists all ContainerRuntimes in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ContainerRuntime, err error)
	// ContainerRuntimes returns an object that can list and get ContainerRuntimes.
	ContainerRuntimes(namespace string) ContainerRuntimeNamespaceLister
	ContainerRuntimeListerExpansion
}

// containerRuntimeLister implements the ContainerRuntimeLister interface.
type containerRuntimeLister struct {
	indexer cache.Indexer
}

// NewContainerRuntimeLister returns a new ContainerRuntimeLister.
func NewContainerRuntimeLister(indexer cache.Indexer) ContainerRuntimeLister {
	return &containerRuntimeLister{indexer: indexer}
}

// List lists all ContainerRuntimes in the indexer.
func (s *containerRuntimeLister) List(selector labels.Selector) (ret []*v1alpha1.ContainerRuntime, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ContainerRuntime))
	})
	return ret, err
}

// ContainerRuntimes returns an object that can list and get ContainerRuntimes.
func (s *containerRuntimeLister) ContainerRuntimes(namespace string) ContainerRuntimeNamespaceLister {
	return containerRuntimeNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ContainerRuntimeNamespaceLister helps list and get ContainerRuntimes.
type ContainerRuntimeNamespaceLister interface {
	// List lists all ContainerRuntimes in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.ContainerRuntime, err error)
	// Get retrieves the ContainerRuntime from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.ContainerRuntime, error)
	ContainerRuntimeNamespaceListerExpansion
}

// containerRuntimeNamespaceLister implements the ContainerRuntimeNamespaceLister
// interface.
type containerRuntimeNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ContainerRuntimes in the indexer for a given namespace.
func (s containerRuntimeNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ContainerRuntime, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ContainerRuntime))
	})
	return ret, err
}

// Get retrieves the ContainerRuntime from the indexer for a given namespace and name.
func (s containerRuntimeNamespaceLister) Get(name string) (*v1alpha1.ContainerRuntime, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("containerruntime"), name)
	}
	return obj.(*v1alpha1.ContainerRuntime), nil
}
