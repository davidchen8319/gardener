/*
SPDX-FileCopyrightText: 2020 SAP SE or an SAP affiliate company and Gardener contributors
SPDX-License-Identifier: Apache-2.0
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/gardener/gardener/pkg/apis/settings/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterOpenIDConnectPresetLister helps list ClusterOpenIDConnectPresets.
type ClusterOpenIDConnectPresetLister interface {
	// List lists all ClusterOpenIDConnectPresets in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.ClusterOpenIDConnectPreset, err error)
	// Get retrieves the ClusterOpenIDConnectPreset from the index for a given name.
	Get(name string) (*v1alpha1.ClusterOpenIDConnectPreset, error)
	ClusterOpenIDConnectPresetListerExpansion
}

// clusterOpenIDConnectPresetLister implements the ClusterOpenIDConnectPresetLister interface.
type clusterOpenIDConnectPresetLister struct {
	indexer cache.Indexer
}

// NewClusterOpenIDConnectPresetLister returns a new ClusterOpenIDConnectPresetLister.
func NewClusterOpenIDConnectPresetLister(indexer cache.Indexer) ClusterOpenIDConnectPresetLister {
	return &clusterOpenIDConnectPresetLister{indexer: indexer}
}

// List lists all ClusterOpenIDConnectPresets in the indexer.
func (s *clusterOpenIDConnectPresetLister) List(selector labels.Selector) (ret []*v1alpha1.ClusterOpenIDConnectPreset, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ClusterOpenIDConnectPreset))
	})
	return ret, err
}

// Get retrieves the ClusterOpenIDConnectPreset from the index for a given name.
func (s *clusterOpenIDConnectPresetLister) Get(name string) (*v1alpha1.ClusterOpenIDConnectPreset, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("clusteropenidconnectpreset"), name)
	}
	return obj.(*v1alpha1.ClusterOpenIDConnectPreset), nil
}
